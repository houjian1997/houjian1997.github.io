{"version":3,"sources":["scripts/actions/index.js","utils/axios.js","utils/lazyload.js","scripts/views/layout.js","scripts/router.js","App.js","serviceWorker.js","scripts/reducers/data.js","scripts/reducers/index.js","store.js","index.js","utils/history.js"],"names":["GETMOVIES","getMovies","a","url","axios","get","res","type","payload","data","result","GETDETAIL","getDetail","params","GETRECOMMEND","getRecommend","val","GETSERCHLIST","getSearchList","CLEARSEARCHLIST","clearSearchList","MOVIESREVERSE","moviesReverse","SEARCHLISTREVERSE","searchListReverse","GETHOTLIST","getHotList","GETCOMINGLIST","getComingList","GETCINEMALIST","getCinemaList","GETCINEMADETAIL","getCinemaDetail","GETMDETAIL","getMdetail","GETORDERDETAIL","getOrderDetail","defaults","baseURL","headers","common","post","alert","Modal","failToast","msg","Toast","hide","fail","interceptors","request","use","config","loading","console","log","sessionStorage","token","error","Promise","reject","response","setTimeout","info","code","alertInstance","text","onPress","style","history","push","close","showAlert","loadingComponent","loader","Loadable","Layout","width","height","path","exact","render","to","component","LazyLoad","React","Component","MainRouter","basename","App","className","Boolean","window","location","hostname","match","defaultState","immutable","Map","movies","detail","recommend","searchList","hotList","comingList","cinemaList","cinemaDetail","mDetail","orderDetail","reducers","combineReducers","state","action","set","toJS","reverse","store","createStore","applyMiddleware","thunk","promise","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","createHashHistory"],"mappings":"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","file":"static/js/main.54112cd2.chunk.js","sourcesContent":["import axios from \"&/axios\";\r\n\r\nexport const GETMOVIES = \"getMovies\";\r\nexport async function getMovies({ url }) {\r\n    let res = await axios.get(url);\r\n    return {\r\n        type: GETMOVIES,\r\n        payload: res.data.result\r\n    }\r\n}\r\n\r\nexport const GETDETAIL = \"getDetail\";\r\nexport async function getDetail({ url, params }) {\r\n    let res = await axios.get(url, { params });\r\n    return {\r\n        type: GETDETAIL,\r\n        payload: res.data.result\r\n    }\r\n}\r\n\r\nexport const GETRECOMMEND = \"getRecommend\";\r\nexport async function getRecommend({ url, params }) {\r\n    let res = await axios.get(url, { params });\r\n    return {\r\n        type: GETRECOMMEND,\r\n        payload: res.data.val\r\n    }\r\n}\r\n\r\nexport const GETSERCHLIST = \"getSearchList\";\r\nexport async function getSearchList({ url, params }) {\r\n    let res = await axios.get(url, { params });\r\n    return {\r\n        type: GETSERCHLIST,\r\n        payload: res.data.result\r\n    }\r\n}\r\n\r\nexport const CLEARSEARCHLIST = \"clearSearchList\";\r\nexport const clearSearchList = () => {\r\n    return {\r\n        type: GETSERCHLIST,\r\n        payload: \"\"\r\n    }\r\n}\r\n\r\nexport const MOVIESREVERSE = \"moviesReverse\";\r\nexport const moviesReverse = () => {\r\n    return {\r\n        type: MOVIESREVERSE\r\n    }\r\n}\r\n\r\nexport const SEARCHLISTREVERSE = \"searchListReverse\";\r\nexport const searchListReverse = () => {\r\n    return {\r\n        type: SEARCHLISTREVERSE\r\n    }\r\n}\r\n\r\nexport const GETHOTLIST = \"getHotList\";\r\nexport async function getHotList({ url }) {\r\n    let res = await axios.get(url);\r\n    return {\r\n        type: GETHOTLIST,\r\n        payload: res.data.result\r\n    }\r\n}\r\n\r\nexport const GETCOMINGLIST = \"getComingList\";\r\nexport async function getComingList({ url }) {\r\n    let res = await axios.get(url);\r\n    return {\r\n        type: GETCOMINGLIST,\r\n        payload: res.data.result\r\n    }\r\n}\r\n\r\nexport const GETCINEMALIST = \"getCinemaList\";\r\nexport async function getCinemaList({ url }) {\r\n    let res = await axios.get(url);\r\n    return {\r\n        type: GETCINEMALIST,\r\n        payload: res.data.result\r\n    }\r\n}\r\n\r\nexport const GETCINEMADETAIL = \"getCinemaDetail\";\r\nexport async function getCinemaDetail({ url, params }) {\r\n    let res = await axios.get(url, { params });\r\n    return {\r\n        type: GETCINEMADETAIL,\r\n        payload: res.data.result\r\n    }\r\n}\r\n\r\nexport const GETMDETAIL = \"getMdetail\";\r\nexport async function getMdetail({ url, params }) {\r\n    let res = await axios.get(url, { params });\r\n    return {\r\n        type: GETMDETAIL,\r\n        payload: res.data.result\r\n    }\r\n}\r\n\r\n\r\nexport const GETORDERDETAIL = \"getOrderDetail\";\r\nexport async function getOrderDetail({ url, params }) {\r\n    let res = await axios.get(url, { params });\r\n    return {\r\n        type: GETORDERDETAIL,\r\n        payload: res.data.result\r\n    }\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\n// axios.defaults.baseURL = \"http://localhost:1906\";\r\naxios.defaults.baseURL = \"https://www.houjian123.com:1900\";\r\n\r\nlet token = \"\";\r\naxios.defaults.headers.common['token'] = token;    // token \r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n\r\nimport { Toast, Modal } from \"antd-mobile\"\r\nimport { history } from \"&/history\"\r\n\r\nconst alert = Modal.alert;\r\nconst showAlert = () => {\r\n    const alertInstance = alert('登录提示', '你确定是否前往登陆', [\r\n        { text: '我就看看', onPress: () => console.log('游客访问'), style: 'default' },\r\n        { text: '马上登录', onPress: () => history.push(\"/login\") },\r\n    ]);\r\n    setTimeout(() => {\r\n        // 可以调用close方法以在外部close\r\n        console.log('auto close');\r\n        alertInstance.close();\r\n    }, 500000);\r\n};\r\n\r\nexport function loadingToast(msg) {\r\n    Toast.hide();\r\n    Toast.loading(msg, 1, () => {\r\n        console.log('Load complete !!!');\r\n    });\r\n}\r\n\r\nexport function failToast(msg) {\r\n    Toast.hide();\r\n    Toast.fail(msg, 1);\r\n}\r\n\r\nexport function showToast(msg) {\r\n    Toast.hide();\r\n    Toast.info(msg, 1);\r\n}\r\n\r\n// 拦截器配置    Interceptors \r\n// 发送请求之前 添加拦截器  \r\naxios.interceptors.request.use(function (config) {\r\n    // 发送之前做的事情 \r\n    loadingToast(\"请求中\");\r\n    config.headers['token'] = sessionStorage.token;\r\n    console.log(config);\r\n\r\n    return config;\r\n}, function (error) {\r\n    // 发送失败 做的失败 \r\n    failToast(\"请求失败\")\r\n    return Promise.reject(error);\r\n});\r\n\r\n// 响应数据 的拦截器 \r\naxios.interceptors.response.use(function (response) {\r\n    // 成功接收到数据 \r\n    console.log(response);\r\n    setTimeout(() => {\r\n        showToast(response.data.msg);\r\n        if (response.data.code == 500) {\r\n            showAlert();\r\n        }\r\n    }, 500)\r\n    return response;\r\n}, function (error) {\r\n    failToast(\"响应失败\");\r\n    // 无法接收到数据  \r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default axios;","import React from 'react';\r\nimport Loadable from 'react-loadable';\r\n\r\n//通用的过场组件\r\nconst loadingComponent =()=>{\r\n    return (\r\n        <div>loading</div>\r\n    ) \r\n}\r\n\r\n//过场组件默认采用通用的，若传入了loading，则采用传入的过场组件\r\nexport default (loader,loading = loadingComponent)=>{\r\n    return Loadable({\r\n        loader,   // 需要懒加载的组件 \r\n        loading\r\n    });\r\n}","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport LazyLoad from \"&/lazyload\";\r\n\r\nexport default class Layout extends React.Component {\r\n    render() {\r\n        return (\r\n            <div style={{ width: \"100%\", height: \"100%\" }}>\r\n                <Switch>\r\n                    <Route path=\"/\" exact render={() => (<Redirect to=\"/guide\" />)} />\r\n                    <Route path=\"/index\" component={LazyLoad(() => import(\"./app/index\"))} />\r\n                    <Route path=\"/guide\" component={LazyLoad(() => import(\"./guide/index\"))} />\r\n                    <Route path=\"/login\" component={LazyLoad(() => import(\"./login/index\"))} />\r\n                    <Route path=\"/search\" component={LazyLoad(() => import(\"./search/index\"))} />\r\n                    <Route path=\"/scan\" component={LazyLoad(() => import(\"./scan/index\"))} />\r\n                    <Route path=\"/detail/:_id\" component={LazyLoad(() => import(\"./detail/index\"))} />\r\n                    <Route path=\"/mdetail/:id\" component={LazyLoad(() => import(\"./mdetail/index\"))} />\r\n                    <Route path=\"/cinemaDetail/:cid\" component={LazyLoad(() => import(\"./cinemadetail/index\"))} />\r\n                    <Route path=\"/order/:cid?\" component={LazyLoad(() => import(\"./order/index\"))} />\r\n                    <Route path=\"/seat\" component={LazyLoad(() => import(\"./seat/index\"))} />\r\n                    <Route path=\"**\" render={() => (<Redirect to=\"/index/home\" />)} />\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter as Hash, Route } from \"react-router-dom\";\r\nimport Layout from \"./views/layout\";\r\n\r\nexport default class MainRouter extends React.Component {\r\n    render() {\r\n        return (\r\n            <Hash basename=\"/\">\r\n                <Route component={Layout} />\r\n            </Hash>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport \"@/styles/index.scss\";\nimport MainRouter from \"~/router\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ width: \"100%\", height: \"100%\" }}>\n      <MainRouter></MainRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import immutable from \"immutable\";\r\nimport {\r\n    GETMOVIES,\r\n    GETDETAIL,\r\n    GETRECOMMEND,\r\n    GETSERCHLIST,\r\n    CLEARSEARCHLIST,\r\n    MOVIESREVERSE,\r\n    SEARCHLISTREVERSE,\r\n    GETHOTLIST,\r\n    GETCOMINGLIST,\r\n    GETCINEMALIST,\r\n    GETCINEMADETAIL,\r\n    GETMDETAIL,\r\n    GETORDERDETAIL\r\n} from \"../actions/index\";\r\n\r\nconst defaultState = immutable.Map(\r\n    {\r\n        movies: [],\r\n        detail: {},\r\n        recommend: [],\r\n        searchList: [],\r\n        hotList: [],\r\n        comingList: [],\r\n        cinemaList: [],\r\n        cinemaDetail: [],\r\n        mDetail: {},\r\n        orderDetail: {}\r\n    }\r\n)\r\n\r\nexport const data = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case GETMOVIES: return state.set(\"movies\", action.payload);\r\n            break;\r\n        case GETDETAIL: return state.set(\"detail\", action.payload);\r\n            break;\r\n        case GETRECOMMEND: return state.set(\"recommend\", action.payload);\r\n            break;\r\n        case GETSERCHLIST: return state.set(\"searchList\", action.payload);\r\n            break;\r\n        case CLEARSEARCHLIST: return state.set(\"searchList\", action.payload);\r\n            break;\r\n        case MOVIESREVERSE: return state.set(\"movies\", state.toJS().movies.reverse());\r\n            break;\r\n        case SEARCHLISTREVERSE: return state.set(\"searchList\", state.toJS().searchList.reverse());\r\n            break;\r\n        case GETHOTLIST: return state.set(\"hotList\", action.payload);\r\n            break;\r\n        case GETCOMINGLIST: return state.set(\"comingList\", action.payload);\r\n            break;\r\n        case GETCINEMALIST: return state.set(\"cinemaList\", action.payload);\r\n            break;\r\n        case GETCINEMADETAIL: return state.set(\"cinemaDetail\", action.payload);\r\n            break;\r\n        case GETMDETAIL: return state.set(\"mDetail\", action.payload);\r\n            break;\r\n        case GETORDERDETAIL: return state.set(\"orderDetail\", action.payload);\r\n            break;\r\n        default: return state;\r\n            break;\r\n    }\r\n}","import { combineReducers } from \"redux-immutable\";\r\nimport { data } from \"./data\";\r\n\r\nexport const reducers = combineReducers(\r\n    {\r\n        data: data,\r\n    }\r\n)","import { createStore, applyMiddleware } from \"redux\";\r\nimport { reducers } from \"~/reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\nimport promise from \"redux-promise\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk, promise));\r\nconsole.log(store);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n","import { createHashHistory } from \"history\";\r\n\r\nexport const history = new createHashHistory();"],"sourceRoot":""}