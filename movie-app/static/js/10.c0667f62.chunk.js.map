{"version":3,"sources":["scripts/components/head/index.js","scripts/views/mdetail/index.js"],"names":["Item","Popover","myImg","src","className","alt","Head","gotoSearch","history","push","back","show","title","go","props","dispatch","clearSearchList","onSelect","opt","setState","visible","selected","value","showActionSheet","handleVisibleChange","BUTTONS","ActionSheet","showActionSheetWithOptions","options","cancelButtonIndex","length","destructiveButtonIndex","message","maskClosable","buttonIndex","clicked","state","this","search","pop","mode","icon","type","rightContent","key","style","marginRight","onClick","mask","overlayClassName","overlayStyle","color","overlay","data-seed","whiteSpace","align","overflow","adjustY","adjustX","offset","onVisibleChange","height","padding","display","alignItems","backgroundColor","onLeftClick","React","Component","connect","searchList","getIn","MDetail","gotoBuyTicket","onChange","console","log","getMdetail","url","params","id","match","location","mDetail","URLSearchParams","get","slice","width","vd","controls","size","accordion","openAnimation","Panel","header","dra","justifyContent","flexWrap","photos","map","photo","i","marginBottom","replace"],"mappings":"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","file":"static/js/10.c0667f62.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavBar, Icon, Popover, ActionSheet } from 'antd-mobile';\r\nimport PropTypes from \"prop-types\";\r\nimport { history } from \"&/history\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearSearchList } from \"~/actions/index\";\r\nimport \"./index.scss\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchList: state.getIn([\"data\", \"searchList\"])\r\n    }\r\n}\r\n\r\nconst Item = Popover.Item;\r\nconst myImg = src => <img src={`https://gw.alipayobjects.com/zos/rmsportal/${src}.svg`} className=\"am-icon am-icon-xs\" alt=\"\" />;\r\n\r\nclass Head extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            visible: false,\r\n            selected: '',\r\n        }\r\n    }\r\n\r\n    gotoSearch = () => {\r\n        history.push(\"/search\")\r\n    }\r\n\r\n    back = (show, title) => {\r\n        if (show) {\r\n            history.go(-1)\r\n        }\r\n\r\n        if (title === \"搜索\") {\r\n            this.props.dispatch(clearSearchList())\r\n        }\r\n    }\r\n\r\n    onSelect = (opt) => {\r\n        this.setState({\r\n            visible: false,\r\n            selected: opt.props.value,\r\n        })\r\n        // console.log(opt.props.value)\r\n        if (opt.props.value == \"scan\") {\r\n            history.push(\"/scan\")\r\n        } else if (opt.props.value == \"login\") {\r\n            history.push(\"/login\")\r\n        } else if (opt.props.value == \"photo\") {\r\n            this.showActionSheet()\r\n        }\r\n    }\r\n\r\n    handleVisibleChange = (visible) => {\r\n        this.setState({\r\n            visible,\r\n        })\r\n    }\r\n\r\n    showActionSheet = () => {\r\n        const BUTTONS = [\"从手机相册选取\", \"立即拍照\"];\r\n        ActionSheet.showActionSheetWithOptions({\r\n            options: BUTTONS,\r\n            cancelButtonIndex: BUTTONS.length - 1,\r\n            destructiveButtonIndex: BUTTONS.length - 2,\r\n            message: '拍照',\r\n            maskClosable: true,\r\n            'data-seed': 'logId',\r\n        },\r\n            (buttonIndex) => {\r\n                this.setState({ clicked: BUTTONS[buttonIndex] });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            title,\r\n            show,\r\n            search,\r\n            pop\r\n        } = this.props;\r\n        return (\r\n            <div>\r\n                <NavBar\r\n                    mode=\"dark\"\r\n                    icon={show && <Icon type=\"left\" />}\r\n                    rightContent={[\r\n                        search && <Icon\r\n                            key=\"0\"\r\n                            type=\"search\"\r\n                            style={{ marginRight: '16px' }}\r\n                            onClick={this.gotoSearch}\r\n                        />,\r\n                        pop && <Popover\r\n                            mask\r\n                            key={1}\r\n                            overlayClassName=\"fortest\"\r\n                            overlayStyle={{ color: 'currentColor' }}\r\n                            visible={this.state.visible}\r\n                            overlay={[\r\n                                (<Item key=\"4\" value=\"scan\" icon={myImg('tOtXhkIWzwotgGSeptou')} data-seed=\"logId\">扫一扫</Item>),\r\n                                (<Item key=\"5\" value=\"photo\" icon={myImg('PKAgAqZWJVNwKsAJSmXd')} style={{ whiteSpace: 'nowrap' }}>拍照</Item>),\r\n                                (<Item key=\"6\" value=\"login\" icon={myImg('uQIYTFeRrjPELImDRrPt')}>\r\n                                    <span style={{ marginRight: 5 }}>登录</span>\r\n                                </Item>),\r\n                            ]}\r\n                            align={{\r\n                                overflow: { adjustY: 0, adjustX: 0 },\r\n                                offset: [-10, 0],\r\n                            }}\r\n                            onVisibleChange={this.handleVisibleChange}\r\n                            onSelect={this.onSelect}\r\n                        >\r\n                            <div style={{\r\n                                height: '100%',\r\n                                padding: '0 15px',\r\n                                marginRight: '-15px',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                            }}\r\n                            >\r\n                                <Icon type=\"ellipsis\" />\r\n                            </div>\r\n                        </Popover>\r\n                    ]}\r\n                    style={{ backgroundColor: \"#d3544d\" }}\r\n                    onLeftClick={() => this.back(show, title)}\r\n                >{title}</NavBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nHead.propTypes = {\r\n    title: PropTypes.string,\r\n    show: PropTypes.bool,\r\n    search: PropTypes.bool,\r\n    pop: PropTypes.bool\r\n}\r\n\r\nexport default connect(mapStateToProps)(Head)","import React from \"react\";\r\nimport Head from \"~/components/head/index\";\r\nimport { WhiteSpace, Button, WingBlank, Accordion, List } from \"antd-mobile\"\r\nimport { connect } from \"react-redux\";\r\nimport { getMdetail } from \"~/actions/index\";\r\nimport { history } from \"&/history\";\r\nimport \"./index.scss\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mDetail: state.getIn([\"data\", \"mDetail\"])\r\n    }\r\n}\r\n\r\nclass MDetail extends React.Component {\r\n    gotoBuyTicket = () => {\r\n        history.push(\"/index/cinema\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(getMdetail(\r\n            {\r\n                url: \"/react/getMdetail\",\r\n                params: { id: this.props.match.params.id }\r\n            }\r\n        ))\r\n    }\r\n\r\n    onChange = (key) => {\r\n        console.log(key);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            location,\r\n            mDetail\r\n        } = this.props;\r\n        console.log(mDetail)\r\n        return (\r\n            <div>\r\n                <Head\r\n                    title={new URLSearchParams(location.search).get(\"nm\").slice(0, 9)}\r\n                    show={true}\r\n                    search={true}\r\n                    pop={true}\r\n                />\r\n                <div style={{ width: \"7.5rem\", height: \"4.2rem\" }}>\r\n                    <video\r\n                        src={mDetail && mDetail.vd}\r\n                        controls\r\n                        style={{ width: \"100%\", height: \"100%\" }}\r\n                    ></video>\r\n                </div>\r\n                <WhiteSpace />\r\n                <div className=\"gp\">\r\n                    <Button type=\"warning\" size=\"large\" onClick={this.gotoBuyTicket}>特惠购票</Button>\r\n                </div>\r\n                <WhiteSpace />\r\n                <div>\r\n                    <Accordion\r\n                        accordion\r\n                        openAnimation={{}}\r\n                        className=\"my-accordion\"\r\n                        onChange={this.onChange}\r\n                    >\r\n                        <Accordion.Panel header=\"电影简介\" className=\"pad\">\r\n                            {mDetail.dra && mDetail.dra}\r\n                        </Accordion.Panel>\r\n                    </Accordion>\r\n                    <Accordion\r\n                        accordion\r\n                        openAnimation={{}}\r\n                        className=\"my-accordion\"\r\n                        onChange={this.onChange}\r\n                    >\r\n                        <Accordion.Panel header=\"电影剧照\" className=\"pad\">\r\n                            <ul\r\n                                style={{\r\n                                    width: \"7.5rem\",\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-around\",\r\n                                    flexWrap: \"wrap\"\r\n                                }}\r\n                            >\r\n                                {\r\n                                    mDetail.photos && mDetail.photos.map((photo, i) => {\r\n                                        return (\r\n                                            <li\r\n                                                key={i}\r\n                                                style={{\r\n                                                    width: \"3rem\",\r\n                                                    marginBottom: \"0.2rem\"\r\n                                                }}\r\n                                            >\r\n                                                <img\r\n                                                    style={{ width: \"2.5rem\", height: \"2rem\" }}\r\n                                                    src={photo.replace(\"w.h\", \"85.155\")}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </Accordion.Panel>\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MDetail)"],"sourceRoot":""}