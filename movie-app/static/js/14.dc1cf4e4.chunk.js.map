{"version":3,"sources":["scripts/components/head/index.js","scripts/views/login/index.js"],"names":["Item","Popover","myImg","src","className","alt","Head","gotoSearch","history","push","back","show","title","go","props","dispatch","clearSearchList","onSelect","opt","setState","visible","selected","value","showActionSheet","handleVisibleChange","BUTTONS","ActionSheet","showActionSheetWithOptions","options","cancelButtonIndex","length","destructiveButtonIndex","message","maskClosable","buttonIndex","clicked","state","this","search","pop","mode","icon","type","rightContent","key","style","marginRight","onClick","mask","overlayClassName","overlayStyle","color","overlay","data-seed","whiteSpace","align","overflow","adjustY","adjustX","offset","onVisibleChange","height","padding","display","alignItems","backgroundColor","onLeftClick","React","Component","connect","searchList","getIn","tabs","mobileReg","passWordReg","codeReg","timer","Login","checkMobile","val","passWord","registerFlag","test","checkPassWord","mobile","gotoRegister","axios","get","params","then","res","data","page","checkPhone","code","codeFlag","loginFlag","checkCode","phone","getCode","setInterval","num","txt","toggle","clearInterval","post","console","log","pwdLogin","sessionStorage","token","backUrl","initialPage","swipeable","tabBarUnderlineStyle","border","width","marginLeft","tabBarActiveTextColor","justifyContent","clear","placeholder","ref","el","onChange","textAlign","size","disabled","position","inline","top","right"],"mappings":"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","file":"static/js/14.dc1cf4e4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavBar, Icon, Popover, ActionSheet } from 'antd-mobile';\r\nimport PropTypes from \"prop-types\";\r\nimport { history } from \"&/history\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearSearchList } from \"~/actions/index\";\r\nimport \"./index.scss\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchList: state.getIn([\"data\", \"searchList\"])\r\n    }\r\n}\r\n\r\nconst Item = Popover.Item;\r\nconst myImg = src => <img src={`https://gw.alipayobjects.com/zos/rmsportal/${src}.svg`} className=\"am-icon am-icon-xs\" alt=\"\" />;\r\n\r\nclass Head extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            visible: false,\r\n            selected: '',\r\n        }\r\n    }\r\n\r\n    gotoSearch = () => {\r\n        history.push(\"/search\")\r\n    }\r\n\r\n    back = (show, title) => {\r\n        if (show) {\r\n            history.go(-1)\r\n        }\r\n\r\n        if (title === \"搜索\") {\r\n            this.props.dispatch(clearSearchList())\r\n        }\r\n    }\r\n\r\n    onSelect = (opt) => {\r\n        this.setState({\r\n            visible: false,\r\n            selected: opt.props.value,\r\n        })\r\n        // console.log(opt.props.value)\r\n        if (opt.props.value == \"scan\") {\r\n            history.push(\"/scan\")\r\n        } else if (opt.props.value == \"login\") {\r\n            history.push(\"/login\")\r\n        } else if (opt.props.value == \"photo\") {\r\n            this.showActionSheet()\r\n        }\r\n    }\r\n\r\n    handleVisibleChange = (visible) => {\r\n        this.setState({\r\n            visible,\r\n        })\r\n    }\r\n\r\n    showActionSheet = () => {\r\n        const BUTTONS = [\"从手机相册选取\", \"立即拍照\"];\r\n        ActionSheet.showActionSheetWithOptions({\r\n            options: BUTTONS,\r\n            cancelButtonIndex: BUTTONS.length - 1,\r\n            destructiveButtonIndex: BUTTONS.length - 2,\r\n            message: '拍照',\r\n            maskClosable: true,\r\n            'data-seed': 'logId',\r\n        },\r\n            (buttonIndex) => {\r\n                this.setState({ clicked: BUTTONS[buttonIndex] });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            title,\r\n            show,\r\n            search,\r\n            pop\r\n        } = this.props;\r\n        return (\r\n            <div>\r\n                <NavBar\r\n                    mode=\"dark\"\r\n                    icon={show && <Icon type=\"left\" />}\r\n                    rightContent={[\r\n                        search && <Icon\r\n                            key=\"0\"\r\n                            type=\"search\"\r\n                            style={{ marginRight: '16px' }}\r\n                            onClick={this.gotoSearch}\r\n                        />,\r\n                        pop && <Popover\r\n                            mask\r\n                            key={1}\r\n                            overlayClassName=\"fortest\"\r\n                            overlayStyle={{ color: 'currentColor' }}\r\n                            visible={this.state.visible}\r\n                            overlay={[\r\n                                (<Item key=\"4\" value=\"scan\" icon={myImg('tOtXhkIWzwotgGSeptou')} data-seed=\"logId\">扫一扫</Item>),\r\n                                (<Item key=\"5\" value=\"photo\" icon={myImg('PKAgAqZWJVNwKsAJSmXd')} style={{ whiteSpace: 'nowrap' }}>拍照</Item>),\r\n                                (<Item key=\"6\" value=\"login\" icon={myImg('uQIYTFeRrjPELImDRrPt')}>\r\n                                    <span style={{ marginRight: 5 }}>登录</span>\r\n                                </Item>),\r\n                            ]}\r\n                            align={{\r\n                                overflow: { adjustY: 0, adjustX: 0 },\r\n                                offset: [-10, 0],\r\n                            }}\r\n                            onVisibleChange={this.handleVisibleChange}\r\n                            onSelect={this.onSelect}\r\n                        >\r\n                            <div style={{\r\n                                height: '100%',\r\n                                padding: '0 15px',\r\n                                marginRight: '-15px',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                            }}\r\n                            >\r\n                                <Icon type=\"ellipsis\" />\r\n                            </div>\r\n                        </Popover>\r\n                    ]}\r\n                    style={{ backgroundColor: \"#d3544d\" }}\r\n                    onLeftClick={() => this.back(show, title)}\r\n                >{title}</NavBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nHead.propTypes = {\r\n    title: PropTypes.string,\r\n    show: PropTypes.bool,\r\n    search: PropTypes.bool,\r\n    pop: PropTypes.bool\r\n}\r\n\r\nexport default connect(mapStateToProps)(Head)","import React from \"react\";\r\nimport Head from \"~/components/head/index\";\r\nimport { Tabs, List, InputItem, Button } from 'antd-mobile';\r\nimport axios from \"&/axios\";\r\nimport { history } from \"&/history\";\r\n\r\nconst tabs = [\r\n    { title: \"注册\" },\r\n    { title: \"验证码登录\" },\r\n    { title: \"密码登录\" }\r\n];\r\n\r\nconst mobileReg = /^1(3|5|7|8|9)\\d{9}$/;\r\nconst passWordReg = /^[0-9a-zA-Z]\\w{5}/;\r\nconst codeReg = /^\\d{4}$/\r\nvar timer = null;\r\n\r\nexport default class Login extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            page: 0,\r\n            registerFlag: false,\r\n            codeFlag: false,\r\n            loginFlag: false,\r\n            num: 10,\r\n            txt: \"获取验证码\",\r\n            toggle: true\r\n        }\r\n    }\r\n\r\n    checkMobile = (val) => {\r\n        var passWord = this.passWord.state.value;\r\n        this.setState({\r\n            registerFlag: mobileReg.test(val) && passWordReg.test(passWord)\r\n        })\r\n    }\r\n\r\n    checkPassWord = (val) => {\r\n        var mobile = this.mobile.state.value;\r\n        this.setState({\r\n            registerFlag: mobileReg.test(mobile) && passWordReg.test(val)\r\n        })\r\n    }\r\n\r\n    gotoRegister = () => {\r\n        if (this.state.registerFlag) {\r\n            axios.get(\"/react/register\", {\r\n                params: {\r\n                    mobile: this.mobile.state.value,\r\n                    passWord: this.passWord.state.value\r\n                }\r\n            }).then(res => {\r\n                // console.log(res)\r\n                if (res.data.type == 1) {\r\n                    this.mobile.state.value = \"\";\r\n                    this.passWord.state.value = \"\";\r\n                    this.setState({\r\n                        page: 1\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    checkPhone = (val) => {\r\n        var code = this.code.state.value;\r\n        this.setState({\r\n            codeFlag: mobileReg.test(val),\r\n            loginFlag: mobileReg.test(val) && codeReg.test(code)\r\n        })\r\n    }\r\n\r\n    checkCode = (val) => {\r\n        var phone = this.phone.state.value;\r\n        this.setState({\r\n            loginFlag: mobileReg.test(phone) && codeReg.test(val)\r\n        })\r\n    }\r\n\r\n    getCode = () => {\r\n        timer = setInterval(() => {\r\n            if (this.state.num > 0) {\r\n                this.state.num--;\r\n                this.setState({\r\n                    num: this.state.num,\r\n                    codeFlag: false,\r\n                    txt: `还剩${this.state.num}s`,\r\n                    toggle: false\r\n                })\r\n            } else {\r\n                clearInterval(timer);\r\n                this.setState({\r\n                    num: 10,\r\n                    codeFlag: true,\r\n                    txt: \"获取验证码\",\r\n                    toggle: true\r\n                })\r\n            }\r\n        }, 1000)\r\n\r\n        axios.post(\"/react/sendCode\", {\r\n            phone: this.phone.state.value\r\n        }).then(res => {\r\n            console.log(res)\r\n        })\r\n    }\r\n\r\n    pwdLogin = () => {\r\n        axios.post(\"/react/pwdLogin\", {\r\n            mobile: this.mobile.state.value,\r\n            passWord: this.passWord.state.value\r\n        }).then(res => {\r\n            if (res.data.type == 1) {\r\n                sessionStorage.token = res.data.token;\r\n                if (sessionStorage.backUrl) {\r\n\r\n                    // 登录成功跳转登录前记录离开的backurl\r\n                    history.push(sessionStorage.backUrl)\r\n                } else {\r\n                    history.push(\"/index/mine\")\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            page,\r\n            registerFlag,\r\n            codeFlag,\r\n            loginFlag,\r\n            txt,\r\n            toggle\r\n        } = this.state;\r\n        return (\r\n            <div>\r\n                <Head title=\"注册/登录\" show={true} search={false} pop={false} />\r\n                <Tabs tabs={tabs}\r\n                    initialPage={page}\r\n                    swipeable={true}\r\n                    tabBarUnderlineStyle={{\r\n                        border: \"0.02rem solid #d3544d\",\r\n                        width: \"1.5rem\", marginLeft: \"0.5rem\"\r\n                    }}\r\n                    tabBarActiveTextColor=\"#d3544d\"\r\n                >\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '150px',\r\n                        backgroundColor: '#fff'\r\n                    }}\r\n                    >\r\n                        <List style={{ width: \"100%\" }}>\r\n                            <InputItem\r\n                                clear\r\n                                placeholder=\"请输入手机号\"\r\n                                ref={el => this.mobile = el}\r\n                                onChange={this.checkMobile}\r\n                            >手机号：</InputItem>\r\n                            <InputItem\r\n                                clear\r\n                                placeholder=\"请输入密码\"\r\n                                ref={el => this.passWord = el}\r\n                                onChange={this.checkPassWord}\r\n                            >密&nbsp;&nbsp;&nbsp;&nbsp;码：</InputItem>\r\n                            <List.Item>\r\n                                <div\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        color: '#108ee9',\r\n                                        textAlign: 'center'\r\n                                    }}\r\n                                >\r\n                                    <Button\r\n                                        type=\"warning\"\r\n                                        size=\"large\"\r\n                                        disabled={!registerFlag}\r\n                                        onClick={this.gotoRegister}\r\n                                    >立即注册</Button>\r\n                                </div>\r\n                            </List.Item>\r\n                        </List>\r\n                    </div>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '150px',\r\n                        backgroundColor: '#fff'\r\n                    }}\r\n                    >\r\n                        <List style={{ width: \"100%\" }}>\r\n                            <InputItem\r\n                                clear\r\n                                placeholder=\"请输入手机号\"\r\n                                ref={el => this.phone = el}\r\n                                disabled={!toggle}\r\n                                onChange={this.checkPhone}\r\n                            >手机号：</InputItem>\r\n                            <InputItem\r\n                                clear\r\n                                placeholder=\"请输入验证码\"\r\n                                ref={el => this.code = el}\r\n                                style={{ position: \"relative\" }}\r\n                                disabled={!toggle}\r\n                                onChange={this.checkCode}\r\n                            >验证码：</InputItem>\r\n                            <Button\r\n                                inline\r\n                                type=\"primary\"\r\n                                size=\"small\"\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    top: \"1rem\",\r\n                                    right: \"0.7rem\"\r\n                                }}\r\n                                disabled={!codeFlag}\r\n                                onClick={this.getCode}\r\n                            >{txt}</Button>\r\n                            <List.Item>\r\n                                <div\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        color: '#108ee9',\r\n                                        textAlign: 'center'\r\n                                    }}\r\n                                >\r\n                                    <Button\r\n                                        type=\"warning\"\r\n                                        size=\"large\"\r\n                                        disabled={!loginFlag}\r\n                                    // onClick={this.gotoLogin}\r\n                                    >一秒登录</Button>\r\n                                </div>\r\n                            </List.Item>\r\n                        </List>\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            height: '150px',\r\n                            backgroundColor: '#fff'\r\n                        }}\r\n                    >\r\n                        <List style={{ width: \"100%\" }}>\r\n                            <InputItem\r\n                                clear\r\n                                placeholder=\"请输入手机号\"\r\n                                ref={el => this.mobile = el}\r\n                                onChange={this.checkMobile}\r\n                            >手机号：</InputItem>\r\n                            <InputItem\r\n                                clear\r\n                                placeholder=\"请输入密码\"\r\n                                ref={el => this.passWord = el}\r\n                                onChange={this.checkPassWord}\r\n                            >密&nbsp;&nbsp;&nbsp;&nbsp;码：</InputItem>\r\n                            <List.Item>\r\n                                <div\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        color: '#108ee9',\r\n                                        textAlign: 'center'\r\n                                    }}\r\n                                >\r\n                                    <Button\r\n                                        type=\"warning\"\r\n                                        size=\"large\"\r\n                                        disabled={!registerFlag}\r\n                                        onClick={this.pwdLogin}\r\n                                    >一秒登录</Button>\r\n                                </div>\r\n                            </List.Item>\r\n                        </List>\r\n                    </div>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}